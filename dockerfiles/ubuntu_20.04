ARG BASE_IMAGE
FROM ubuntu:20.04
#FROM ${BASE_IMAGE}

RUN useradd --user-group --create-home --no-log-init --shell /bin/bash tarantool

# An ARG instruction goes out of scope at the end of the build
# stage where it was defined. To use an arg in multiple stages,
# each stage must include the ARG instruction
ARG TNT_VER
ARG NPROC
ENV TARANTOOL_VERSION=${TNT_VER} \
    LUAROCK_VSHARD_VERSION=0.1.18 \
    LUAROCK_AVRO_SCHEMA_VERSION=3.0.6 \
    LUAROCK_EXPERATIOND_VERSION=1.1.1 \
    LUAROCK_QUEUE_VERSION=1.1.0 \
    LUAROCK_CONNPOOL_VERSION=1.1.1 \
    LUAROCK_HTTP_VERSION=1.2.0 \
    LUAROCK_MEMCACHED_VERSION=1.0.1 \
    LUAROCK_METRICS_VERSION=0.12.0 \
    LUAROCK_TARANTOOL_PG_VERSION=2.0.2 \
    LUAROCK_TARANTOOL_MYSQL_VERSION=2.1.0 \
    LUAROCK_TARANTOOL_MQTT_VERSION=1.5.1 \
    LUAROCK_TARANTOOL_GIS_VERSION=1.0.1 \
    LUAROCK_TARANTOOL_PROMETHEUS_VERSION=1.0.4 \
    LUAROCK_TARANTOOL_GPERFTOOLS_VERSION=1.0.1

ARG ENABLE_BUNDLED_LIBYAML \
    LUAJIT_DISABLE_SYSPROF \
    LUAJIT_ENABLE_GC64

RUN set -x \ 
    && apt update && apt -y --no-install-recommends install \
    libgoogle-perftools4 \
    deborphan \
    unzip \
    libgeos-dev \
    libsasl2-dev \
    libssl-dev \
    libpq-dev \
    gis-devel \
    libproj-dev \
    gosu \
    curl \
    ca-certificates \
    && ln -snf /usr/share/zoneinfo/UTC /etc/localtime && echo UTC > /etc/timezone \
    && ln -s /usr/lib/x86_64-linux-gnu/libprofiler.so.0.4.18 /usr/lib/x86_64-linux-gnu/libprofiler.so \
    && curl -L https://tarantool.io/release/2/installer.sh | bash \
    && apt -y install tarantool \
    && apt clean \
    && set -x \
    && tarantoolctl rocks install lua-term \
    && tarantoolctl rocks install avro-schema $LUAROCK_AVRO_SCHEMA_VERSION \
    && tarantoolctl rocks install expirationd $LUAROCK_EXPERATIOND_VERSION \
    && tarantoolctl rocks install queue $LUAROCK_QUEUE_VERSION \
    && tarantoolctl rocks install connpool $LUAROCK_CONNPOOL_VERSION \
    && tarantoolctl rocks install vshard $LUAROCK_VSHARD_VERSION \
    && tarantoolctl rocks install http $LUAROCK_HTTP_VERSION \
    && tarantoolctl rocks install pg $LUAROCK_TARANTOOL_PG_VERSION \
    && tarantoolctl rocks install mysql $LUAROCK_TARANTOOL_MYSQL_VERSION \
    && tarantoolctl rocks install memcached $LUAROCK_MEMCACHED_VERSION \
    && tarantoolctl rocks install metrics $LUAROCK_METRICS_VERSION \
    && tarantoolctl rocks install prometheus $LUAROCK_TARANTOOL_PROMETHEUS_VERSION \
    && tarantoolctl rocks install mqtt $LUAROCK_TARANTOOL_MQTT_VERSION \
    && tarantoolctl rocks install gis $LUAROCK_TARANTOOL_GIS_VERSION \
    && tarantoolctl rocks install gperftools $LUAROCK_TARANTOOL_GPERFTOOLS_VERSION \
    && apt -y autoremove \
    && rm -rf /var/lib/apt/lists/

COPY files/tarantool-entrypoint.lua /usr/local/bin/
COPY files/tarantool_set_config.lua /usr/local/bin/
COPY files/docker-entrypoint_centos.sh /usr/local/bin/docker-entrypoint.sh
COPY files/console /usr/local/bin/
COPY files/tarantool_is_up /usr/local/bin/
COPY files/tarantool.default /usr/local/etc/default/tarantool
COPY files/test-rocks.lua /usr/local/bin/

RUN tarantool test /usr/local/bin/test-rocks.lua

RUN chown tarantool /etc/tarantool && ln -s /usr/local/bin/docker-entrypoint.sh /entrypoint.sh

ENTRYPOINT ["docker-entrypoint.sh"]

HEALTHCHECK CMD tarantool_is_up

EXPOSE 3301
CMD [ "tarantool" ]
